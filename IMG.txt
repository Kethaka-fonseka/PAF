const storage = multer.diskStorage({
    destination: function(req, file, cb) {
        //save location
        cb(null, '../frontend/public/products-images');
    },
    filename: function(req, file, cb) {   
        cb(null, uuidv4() + '-' + Date.now() + path.extname(file.originalname));
    }
});

//filter photo type
const fileFilter = (req, file, cb) => {
    const allowedFileTypes = ['image/jpeg', 'image/jpg', 'image/png'];
    if(allowedFileTypes.includes(file.mimetype)) {
        cb(null, true);
    } else {
        cb(null, false);
    }
}

let upload = multer({ storage, fileFilter });


//add new products details to the system with photo
router.route('/add').post(upload.single('photo'), (req, res) => {

   var Title =req.body.Title;
   var Brand =req.body.Brand;
   var Category =req.body.Category;
   var Condition =req.body.Condition;
   var Description =req.body.Description;
   var Quantity =req.body.Quantity;
   var Price =req.body.Price;
   const photo = req.file.filename;
   var sellerID =req.body.sellerID;

    const sellerData= new seller({
        Title,
        Brand,
        Category,
        Condition,
        Description,
        Quantity,
        Price,
        photo,
        sellerID,
  
    });


    sellerData.save().then(()=>{
        res.json("create new listing");

    }).catch((err) =>{
        
        console.log("creating error");
        console.log(err);
    });
});

//display created listings on seller dashboard
router.route('/display/:data').get(async (req,res)=>{
    var sellerID =req.params.data;

   await seller.find({sellerID:sellerID}).then((sellers)=>{
        res.json(sellers)
    }).catch((err)=>{
        console.log(err);
    });

});
